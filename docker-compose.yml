services:  
  postgres:
    image: postgres:latest
    container_name: rest_pg
    environment:
      POSTGRES_DB: restaurant_pg
      POSTGRES_USER: restaurant
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U restaurant -d restaurant_pg"]
      interval: 5s
      timeout: 3s
      retries: 5
  redis:
    image: redis:latest
    container_name: rest_redis
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "password", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 15s
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # AMQP-протокол
      - "15672:15672"  # Веб-интерфейс
    environment:
      RABBITMQ_DEFAULT_USER: restaurant
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
  auth_service:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    ports:
      - "44044:44044"
    container_name: auth_service
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./auth_service/config:/app/config
  notification_service:
    build:
      context: ./notification_service
      dockerfile: Dockerfile
    container_name: notification_service
    restart: always
    depends_on:
      rabbitmq: 
        condition: service_healthy
    volumes:
      - ./notification_service/config:/app/config
  main_service:
    build:
      context: ./main_service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    container_name: main_service
    restart: always
    depends_on:
      postgres: 
        condition: service_healthy
      redis: 
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      auth_service:
        condition: service_started
    volumes:
      - ./main_service/config:/app/config

volumes:
  postgres_data:
  redis_data: